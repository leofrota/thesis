filter(`def_diag_princ_grupo == "Parto"` == TRUE)
## grafico ggridges de tempo de estadio por doença especifica
proportions <- amostra %>%
group_by(def_diag_princ_cap) %>%
summarize(n=n()) %>%
mutate(freq = n / sum(n))
testao <- inner_join(amostra, proportions, by = 'def_diag_princ_cap')
testao %>%
filter(DIAS_PERM < 30) %>%
ggplot(aes(x = DIAS_PERM, y = def_diag_princ_cap, fill = freq)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Proporção do Total") +
labs(title = 'TempO De Estadia')
## grafico ggridges de tempo de estadio por doença especifica por estado
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_uf_int, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
geom_vline(xintercept = 2.11, colour = "indianred", linetype = "dashed") +
geom_vline(xintercept = 3.11, colour = "steelblue", linetype = "dashed") +
#geom_text(aes(x=2.11, y = "Bahia")), colour="indiandred", angle=180, text=element_text(size=11)) +
#geom_text(aes(x=3.11, label="\Media Europa"), colour="steelblue", angle=180, text=element_text(size=11) +
labs(title = 'TempO De Estadia Parto') +
theme_minimal()
## Tempo de Estadia Parto por idade
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_idade_pub, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto')  +
theme_minimal()
## Tempo de Estadia Parto por numero de filhos
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_num_filhos, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto')    +
theme_minimal()
## Tempo de Estadia Parto por Gestação de risco
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_gestrisco, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto')  +
theme_minimal()
## Tempo de Estadia Parto por Nacionalidade
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_nacionalidade, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto')
## Tempo de Estadia Parto se houve UTI
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_marca_uti, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto')
## Tempo de Estadia Parto por esfera juridica
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_esferajur, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto') +
theme_minimal()
## Tempo de Estadia Parto por Etnia
amostra %>%
filter(def_diag_princ_grupo == "Parto") %>%
filter(DIAS_PERM < 15) %>%
ggplot(aes(x = DIAS_PERM, y = def_raca_cor, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Dias", option = "C") +
labs(title = 'TempO De Estadia Parto')
### Media OCDE (tempo de estadia pós parto)
media <- tempoocde %>%
group_by(`Região`) %>%
summarize(mean(`Media de tempo de Estadia`))
####    Mapa tempo medio
cidades <- get_brmap(geo = "City",class = "sf")
cidades <- st_set_geometry(cidades, NULL)
# Removendo o ultimo caracter
cidades$codigo <- as.character(cidades$City)
cidades$codigo <- substr(cidades$codigo, 1, 6)
cidades$codigo <- as.numeric(cidades$codigo)
pib_percapita$codigo <- as.character(pib_percapita$codigo)
pib_percapita$codigo <- substr(pib_percapita$codigo, 1, 6)
pib_percapita$codigo <- as.numeric(pib_percapita$codigo)
teste_mapa <- merge(x = cidades, y = pib_percapita,
by.x = "codigo",
by.y = "codigo")
teste_mapa$pib_percapitam <- as.numeric(teste_mapa$pib_percapitam)
data_mapa <- merge(x = cidades, y = amostra,
by.y = "ocor_codigo_adotado",
by.x = "codigo")
microregion <- get_brmap(geo = "MicroRegion", class = "sf")
data_mapinho <- merge(x = data_mapa, y = microregion,
by.y = "MicroRegion",
by.x = "MicroRegion")
proportions_testinho <- data_mapinho %>%
filter(def_diag_princ_grupo == "Parto") %>%
group_by(MicroRegion) %>%
summarize(mediamicro = median(DIAS_PERM)) %>%
filter(mediamicro < 10)
data_mapinho_final <- inner_join(data_mapinho,
proportions_testinho,
by = 'MicroRegion')
### mapas
### Tempo Medio Parto
ggplot(data = data_mapinho_final, aes(geometry = geometry)) +
geom_sf(lwd = 0, aes(fill = mediamicro)) +
labs(fill = "Tempo medio", title = "Parto") +
theme(panel.background = element_rect(fill = "white"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
scale_fill_gradient(low = "steelblue", high = "indianred")
### Pib per Capita
teste_mapa %>%
mutate(pib_percapitam = log2(pib_percapitam)) %>%
ggplot(aes(geometry = geometry)) +
geom_sf(lwd = 0, aes(fill = pib_percapitam)) +
labs(fill = "Pib", title = "Pib Per Capita") +
theme(panel.background = element_rect(fill = "white"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
scale_fill_gradient(low = "steelblue", high = "indianred")
#CID
cid <- list.files(pattern = "CID")
cid <- read_xlsx(cid)
cid = cid[c(1,2)]
#por diagnostico
intern_diag <- df_2018 %>%
dplyr::select(DIAG_PRINC,DIAS_PERM) %>%
dplyr::mutate(DIAG_PRINC = as.character(DIAG_PRINC)) %>%
dplyr::group_by(DIAG_PRINC) %>%
dplyr::summarise(n = n(), media = mean(DIAS_PERM)) %>%
dplyr::left_join(cid) %>%
dplyr::mutate(rank = rank(-n),
descricao = reorder(descricao, -media)) %>%
dplyr::filter(rank <= 50)
ggplot(intern_diag, aes(y = media, x = descricao, fill = n)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1 ))
#### Tempo de internação medio
teste <- amostra %>%
dplyr::left_join(cid) %>%
dplyr::select(DIAS_PERM, descricao) %>%
dplyr::group_by(descricao) %>%
dplyr::summarise(n = n()) %>%
dplyr::mutate(rank = rank(-n))
teste2 <- amostra %>%
dplyr::left_join(cid) %>%
dplyr::left_join(teste, by = "descricao") %>%
dplyr::filter(rank <= 5)
ggplot(teste, aes(x = DIAS_PERM, color = descricao)) +
geom_freqpoly(binwidth = 0.1) +
xlim(0,30)
# merge final
amostra$X <- as.Date(amostra$NASC, origin = "1899-12-30")
amostra_nascidos$DTNASCMAE <- as.Date(as.POSIXct(amostra_nascidos$DTNASCMAE, origin = "1900-01-01"))
amostra_nascidos$DTNASC <- as.Date(as.POSIXct(amostra_nascidos$DTNASC, origin = "1970-01-01"))
dt_final <- left_join(amostra_nascidos, amostra by = c("CODESTAB" = "CNES" , "DTNASCMAE" = "NASC" ,  "CODMUNRES" = "res_MUNCOD", ))
teste1 <- amostra %>%
select(CNES, NASC, res_MUNCOD) %>%
mutate(amostra = "sim")
teste2 <- amostra_nascidos %>%
select(CODESTAB, DTNASCMAE, CODMUNRES) %>%
mutate(amostra_nascidos = "sim")
x <- full_join(teste1, teste2, by = c("CNES" = "CODESTAB", "NASC" = "DTNASCMAE",  "res_MUNCOD"= "CODMUNRES")) %>%
filter(amostra == "sim" & amostra_nascidos == "sim")
# Base Sistema de informações hospitalares SUS
base_hospitalares_2017 <- read.csv2("~/thesis/ETLSIH.ST_2017.csv", sep = "[\]")
# Base Sistema de informações hospitalares SUS
base_hospitalares_2017 <- read.csv2("~/thesis/ETLSIH.ST_2017.csv")
View(base_hospitalares_2017)
# Base Sistema de informações hospitalares SUS
base_hospitalares_2017 <- read.csv2("~/thesis/ETLSIH.ST_2017.csv", sep = " ")
ETLSIH.ST_2017 <- read.delim("~/thesis/ETLSIH.ST_2017.csv")
View(ETLSIH.ST_2017)
ETLSINASC.DNRES_2017 <- read.delim("~/thesis/ETLSINASC.DNRES_2017.csv", encoding="UTF-8")
View(ETLSINASC.DNRES_2017)
rm(ETLSIH.ST_2017)
ETLSIH.ST_2017 <- read.delim("~/thesis/ETLSIH.ST_2017.csv", encoding="UTF-8")
View(ETLSIH.ST_2017)
amostra <- ETLSIH.ST_2017 %>%
sample_n(20)
amostra_nascidos <- ETLSINASC.DNRES_2017 %>%
sample_n(20)
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggridges)
library(brazilmaps)
library(maptools)
library(rgeos)
library(readxl)
library(stringi)
library(microdadosBrasil)
library(lubridate)
amostra <- ETLSIH.ST_2017 %>%
sample_n(20)
amostra_nascidos <- ETLSINASC.DNRES_2017 %>%
sample_n(20)
amostra$X <- as.Date(amostra$NASC, origin = "1899-12-30")
View(amostra)
amostra$X <- as_date(amostra$NASC,  origin = lubridate::origin, tz = "UTC")
amostra$X <- as_date(amostra$NASC,  origin = lubridate::origin)
amostra$X <- as_date(amostra$NASC)
amostra$z <- as_date(amostra$NASC)
amostra$z <- as.POSIXlt(amostra$NASC, origin="1900-01-01")
amostra$z <- as.POSIXlt(amostra$NASC, origin="1899-12-30")
amostra$z <- as.POSIXlt(amostra$NASC, origin="1904-01-01")
amostra$z <- as.Date.numeric(amostra$NASC, origin="1904-01-01")
amostra$z <- janitor::excel_numeric_to_date(amostra$NASC)
# merge final
x <- amostra %>%
select(NASC, IDADE)
View(x)
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = as.Date(NASC, origin::"1970-01-01"))
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = as.Date(NASC, origin = "1970-01-01"))
View(x)
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = as.POSIXct.Date(NASC, origin = "1970-01-01"))
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = as.POSIXct.Date(NASC, origin = "1900-01-01"))
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = as.POSIXct(NASC, origin = "1900-01-01"))
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = as_date(NASC))
View(x)
mutate(X = paste(substr(NASC,1,4),"-", substr(NASC, 5,6), "-", substr(NASC, 7,8))
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = paste(substr(NASC,1,4),"-", substr(NASC, 5,6), "-", substr(NASC, 7,8)))
View(x)
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = paste(substr(NASC,1,4),"-", substr(NASC, 5,6), "-", substr(NASC, 7,8)))
View(x)
View(x)
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = paste(substr(NASC,1,4), substr(NASC, 5,6),substr(NASC, 7,8), SEP = "-"))
View(x)
# merge final
x <- amostra %>%
select(NASC, IDADE) %>%
mutate(X = paste(substr(NASC,1,4), substr(NASC, 5,6),substr(NASC, 7,8), sep = "-"))
# merge final
amostra <- amostra %>%
mutate(NASC = ymd(paste(substr(NASC,1,4), substr(NASC, 5,6),substr(NASC, 7,8), sep = "-")))
View(amostra)
X <- amostra_nascidos %>%
select(DTNASCMAE)
View(x)
X <- amostra_nascidos %>%
select(DTNASCMAE)
X <- amostra_nascidos %>%
select(DTNASCMAE)
View(x)
x <- amostra_nascidos %>%
select(DTNASCMAE)
View(x)
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(X = ymd(DTNASCMAE))
View(x)
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(X = janitor::excel_numeric_to_date(DTNASCMAE))
View(x)
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(X = as.Date(DTNASCMAE, origin = "1970-01-01"))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(X = as_date(DTNASCMAE, origin = lubridate::origin))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(X = as.Date(DTNASCMAE, origin = "1970-01-01"))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(X = as.Date(DTNASCMAE, origin = "1900-01-01"))
View(X)
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(z = as.Date(DTNASCMAE, origin = "1900-01-01"))
View(x)
teste2 <- amostra_nascidos %>%
select(CODESTAB, DTNASCMAE, CODMUNRES) %>%
mutate(amostra_nascidos = "sim")
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = as.Date(DTNASCMAE, origin = "1899-12-30"))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = as.Date(DTNASCMAE, origin = "1904-01-01"))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = as.Date(DTNASCMAE, origin = "2000-01-01"))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = as.Date(DTNASCMAE, origin = "1970-01-01"))
library(stringr)
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = str_pad(DTNASCMAE, 8, pad = 0))
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = str_pad(DTNASCMAE, 8, pad = 0),
y = paste(substr(y, 5,8), substr(DTNASCMAE, 3,4), substr(DTNASCMAE,1,2), sep = "-"))
View(x)
x <- amostra_nascidos %>%
select(DTNASCMAE) %>%
mutate(y = str_pad(DTNASCMAE, 8, pad = 0),
y = paste(substr(y, 5,8), substr(y, 3,4), substr(y,1,2), sep = "-"))
amostra_nascidos <- amostra_nascidos %>%
mutate(DTNASCMAE = str_pad(DTNASCMAE, 8, pad = 0),
DTNASCMAE = paste(substr(DTNASCMAE, 5,8), substr(DTNASCMAE, 3,4), substr(DTNASCMAE,1,2), sep = "-"))
amostra_nascidos <- amostra_nascidos %>%
mutate(DTNASCMAE = str_pad(DTNASCMAE, 8, pad = 0),
DTNASCMAE = paste(substr(DTNASCMAE, 5,8), substr(DTNASCMAE, 3,4), substr(DTNASCMAE,1,2), sep = "-"),
DTNASCMAE = ymd(DTNASCMAE))
amostra_nascidos <- ETLSINASC.DNRES_2017 %>%
sample_n(20)
amostra_nascidos <- amostra_nascidos %>%
mutate(DTNASCMAE = str_pad(DTNASCMAE, 8, pad = 0),
DTNASCMAE = paste(substr(DTNASCMAE, 5,8), substr(DTNASCMAE, 3,4), substr(DTNASCMAE,1,2), sep = "-"),
DTNASCMAE = ymd(DTNASCMAE))
amostra <- ETLSIH.ST_2017 %>%
sample_n(100000)
amostra_nascidos <- ETLSINASC.DNRES_2017 %>%
sample_n(100000)
teste1 <- amostra %>%
select(CNES, NASC, res_MUNCOD) %>%
mutate(amostra = "sim")
teste2 <- amostra_nascidos %>%
select(CODESTAB, DTNASCMAE, CODMUNRES) %>%
mutate(amostra_nascidos = "sim")
x <- full_join(teste1, teste2, by = c("CNES" = "CODESTAB", "NASC" = "DTNASCMAE",  "res_MUNCOD"= "CODMUNRES")) %>%
filter(amostra == "sim" & amostra_nascidos == "sim")
View(x)
teste1 <- amostra %>%
select(CNES, NASC, res_MUNCOD) %>%
mutate(amostra = "sim")
teste2 <- amostra_nascidos %>%
select(CODESTAB, DTNASCMAE, CODMUNRES) %>%
mutate(amostra_nascidos = "sim")
View(teste1)
View(teste2)
# merge final
amostra <- amostra %>%
mutate(NASC = ymd(paste(substr(NASC,1,4), substr(NASC, 5,6),substr(NASC, 7,8), sep = "-")))
amostra_nascidos <- amostra_nascidos %>%
mutate(DTNASCMAE = str_pad(DTNASCMAE, 8, pad = 0),
DTNASCMAE = paste(substr(DTNASCMAE, 5,8), substr(DTNASCMAE, 3,4), substr(DTNASCMAE,1,2), sep = "-"),
DTNASCMAE = ymd(DTNASCMAE))
teste1 <- amostra %>%
select(CNES, NASC, res_MUNCOD) %>%
mutate(amostra = "sim")
teste2 <- amostra_nascidos %>%
select(CODESTAB, DTNASCMAE, CODMUNRES) %>%
mutate(amostra_nascidos = "sim")
x <- full_join(teste1, teste2, by = c("CNES" = "CODESTAB", "NASC" = "DTNASCMAE",  "res_MUNCOD"= "CODMUNRES")) %>%
filter(amostra == "sim" & amostra_nascidos == "sim")
View(x)
amostra <- ETLSIH.ST_2017 %>%
sample_n(500000)
amostra_nascidos <- ETLSINASC.DNRES_2017 %>%
sample_n(500000)
# merge final
amostra <- amostra %>%
mutate(NASC = ymd(paste(substr(NASC,1,4), substr(NASC, 5,6),substr(NASC, 7,8), sep = "-")))
amostra_nascidos <- amostra_nascidos %>%
mutate(DTNASCMAE = str_pad(DTNASCMAE, 8, pad = 0),
DTNASCMAE = paste(substr(DTNASCMAE, 5,8), substr(DTNASCMAE, 3,4), substr(DTNASCMAE,1,2), sep = "-"),
DTNASCMAE = ymd(DTNASCMAE))
teste1 <- amostra %>%
select(CNES, NASC, res_MUNCOD) %>%
mutate(amostra = "sim")
teste2 <- amostra_nascidos %>%
select(CODESTAB, DTNASCMAE, CODMUNRES) %>%
mutate(amostra_nascidos = "sim")
x <- right_join(teste1, teste2, by = c("CNES" = "CODESTAB", "NASC" = "DTNASCMAE",  "res_MUNCOD"= "CODMUNRES")) %>%
filter(amostra == "sim" & amostra_nascidos == "sim")
View(x)
y <- x %>%
group_by(CNES, NASCO, res_MUNCOD) %>%
count()
y <- x %>%
group_by(CNES, NASC, res_MUNCOD) %>%
count()
View(y)
y <- x %>%
group_by(CNES, NASC, res_MUNCOD) %>%
count() %>%
filter(n > 1)
View(y)
View(amostra_nascidos)
rm(x,y,X)
rm(teste1, teste2)
View(amostra)
dt_final <- right_join(amostra, amostra_nascidos, by = c("CNES" = "CODESTAB", "NASC" = "DTNASCMAE",  "res_MUNCOD"= "CODMUNRES")) %>%
filter(!(is.na(ANO_CMPT)))
View(ETLSIH.ST_2017)
View(dt_final)
dt_final <- right_join(amostra, amostra_nascidos, by = c("CNES" = "CODESTAB", "NASC" = "DTNASCMAE",  "res_MUNCOD"= "CODMUNRES")) %>%
filter(!(is.na(ANO_CMPT))) %>%
group_by(NASC, CEP) %>%
distinct()
dup <- dt_final %>%
group_by(NASC, CEP) %>%
count()
View(dup)
dt_final <- left_join(dup)
dt_final <- left_join(dt_final, dup)
View(dt_final)
dup <- dt_final %>%
group_by(NASC, CEP, VAL_SP) %>%
count()
View(dup)
dt_final <- left_join(dt_final %>% select(-n), dup) %>%
filter(n = 1)
dt_final <- left_join(dt_final %>% select(-n), dup) %>%
filter(n == 1)
View(dt_final)
x <- dt_final %>%
filter(def_procedimento_realizado %in% c("PARTO NORMAL", "PARTO CESARIANO"))
dt_final <- dt_final %>%
filter(def_procedimento_realizado %in% c("PARTO NORMAL", "PARTO CESARIANO"))
colnames(dt_final)
ggplot(dt_final, aes(x = DIAS_PERM, y = APGAR1)) +
geom_point()
ggplot(dt_final %>% filter(DIAS_PERM < 11, APGAR1 < 20), aes(x = DIAS_PERM, y = APGAR1)) +
geom_point()
ggplot(dt_final %>% filter(DIAS_PERM < 11, APGAR1 < 20), aes(x = DIAS_PERM, y = APGAR1)) +
geom_density()
ggplot(dt_final %>% filter(DIAS_PERM < 11, APGAR1 < 20), aes(x = DIAS_PERM, y = APGAR1)) +
geom_jitter()
ggplot(dt_final %>% filter(DIAS_PERM < 11, APGAR1 < 20), aes(x = DIAS_PERM, y = APGAR1)) +
geom_jitter(alpha = 0.8)
regressaozinha <- lm(APGAR1 ~ DIAS_PERM, data = dt_final)
summary(regressaozinha)
ggplot(dt_final %>% filter(DIAS_PERM < 11), aes(x = DIAS_PERM, y = APGAR5)) +
geom_jitter(alpha = 0.8)
ggplot(dt_final %>% filter(DIAS_PERM < 11, APGAR5 < 20), aes(x = DIAS_PERM, y = APGAR5)) +
geom_jitter(alpha = 0.8)
regressaozinha <- lm(APGAR5 ~ DIAS_PERM, data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ def_consultas, data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ CONSULTAS, data = dt_final)
summary(regressaozinha)
ggplot(dt_final %>% filter(DIAS_PERM < 11, def_consultas < 30), aes(x = def_consultas, y = APGAR5)) +
geom_jitter(alpha = 0.8)
ggplot(dt_final %>% filter(DIAS_PERM < 11, def_consultas < 30), aes(x = def_consultas, y = APGAR5)) +
geom_point(alpha = 0.8)
ggplot(dt_final %>% filter( def_consultas < 30), aes(x = def_consultas, y = APGAR5)) +
geom_point(alpha = 0.8)
ggplot(dt_final %>% filter(DIAS_PERM < 11, CONSULTAS < 30), aes(x = CONSULTAS, y = APGAR5 )) +
geom_jitter(alpha = 0.8)
ggplot(dt_final %>% filter(APGAR5 < 25, CONSULTAS < 30), aes(x = CONSULTAS, y = APGAR5 )) +
geom_point(alpha = 0.8)
ggplot(dt_final %>% filter(APGAR5 < 25, CONSULTAS < 30), aes(x = CONSULTAS, y = APGAR5 )) +
geom_jitter(alpha = 0.8)
regressaozinha <- lm(APGAR5 ~ def_consultas, data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM, data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM + def_gestrisco, data = dt_final)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM , data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM + def_procedimento_realizado, data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM + def_procedimento_realizado + GESTRISCO, data = dt_final)
summary(regressaozinha)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM + def_procedimento_realizado + def_gestrisco, data = dt_final)
regressaozinha <- lm(APGAR5 ~ def_consultas + DIAS_PERM + def_procedimento_realizado, data = dt_final)
summary(regressaozinha)
